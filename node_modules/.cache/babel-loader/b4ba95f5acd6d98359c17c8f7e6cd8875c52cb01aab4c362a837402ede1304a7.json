{"ast":null,"code":"var _jsxFileName = \"/media/shubham/New Volume/cryptocurrency-project/src/components/CoinInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { HistoricalChart } from '../config/api';\nimport { Line } from 'react-chartjs-2';\nimport { CircularProgress, createTheme, ThemeProvider } from '@mui/material';\nimport SelectButton from './SelectButton';\nimport { chartDays } from '../config/data';\nimport { CryptoState } from '../CryptoContext';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CoinInfo = ({\n  coin\n}) => {\n  _s();\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const {\n    currency\n  } = CryptoState();\n  const [flag, setFlag] = useState(false);\n  const Container = styled.div`\n    width: 75%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 25px;\n    padding: 40px;\n\n    @media (max-width: 768px) {\n      width: 100%;\n      margin-top: 0;\n      padding: 20px;\n      padding-top: 0;\n    }\n  `;\n  const fetchHistoricData = async () => {\n    try {\n      const {\n        data\n      } = await axios.get(HistoricalChart(coin.id, days, currency));\n      setFlag(true);\n      setHistoricData(data.prices);\n    } catch (error) {\n      console.error('Error fetching historical data:', error);\n    }\n  };\n  useEffect(() => {\n    if (coin) {\n      fetchHistoricData();\n    }\n  }, [days, currency, coin && coin.id]);\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#fff'\n      },\n      type: 'dark'\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: !historicData || !flag ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: 'gold'\n        },\n        size: 250,\n        thickness: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Line, {\n          data: {\n            labels: historicData.map(dataPoint => {\n              const date = new Date(dataPoint[0]);\n              const time = date.getHours() > 12 ? `${date.getHours() - 12}:${date.getMinutes()} PM` : `${date.getHours()}:${date.getMinutes()} AM`;\n              return days === 1 ? time : date.toLocaleDateString();\n            }),\n            datasets: [{\n              data: historicData.map(dataPoint => dataPoint[1]),\n              label: `Price ( Past ${days} Days ) in ${currency}`,\n              borderColor: '#EEBC1D'\n            }]\n          },\n          options: {\n            scales: {\n              x: {\n                type: 'linear' // Use 'linear' instead of 'category'\n              }\n            },\n            elements: {\n              point: {\n                radius: 1\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            marginTop: 20,\n            justifyContent: 'space-around',\n            width: '100%'\n          },\n          children: chartDays.map(day => /*#__PURE__*/_jsxDEV(SelectButton, {\n            onClick: () => {\n              setDays(day.value);\n              setFlag(false);\n            },\n            selected: day.value === days,\n            children: day.label\n          }, day.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CoinInfo, \"5cevX/o6qRszNhNoUf2b8VPdjTg=\");\n_c = CoinInfo;\nexport default CoinInfo;\nvar _c;\n$RefreshReg$(_c, \"CoinInfo\");","map":{"version":3,"names":["React","useEffect","useState","axios","HistoricalChart","Line","CircularProgress","createTheme","ThemeProvider","SelectButton","chartDays","CryptoState","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","CoinInfo","coin","_s","historicData","setHistoricData","days","setDays","currency","flag","setFlag","Container","div","fetchHistoricData","data","get","id","prices","error","console","darkTheme","palette","primary","main","type","theme","children","style","color","size","thickness","fileName","_jsxFileName","lineNumber","columnNumber","labels","map","dataPoint","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","label","borderColor","options","scales","x","elements","point","radius","display","marginTop","justifyContent","width","day","onClick","value","selected","_c","$RefreshReg$"],"sources":["/media/shubham/New Volume/cryptocurrency-project/src/components/CoinInfo.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { HistoricalChart } from '../config/api';\nimport { Line } from 'react-chartjs-2';\nimport { CircularProgress, createTheme, ThemeProvider } from '@mui/material';\nimport SelectButton from './SelectButton';\nimport { chartDays } from '../config/data';\nimport { CryptoState } from '../CryptoContext';\nimport styled from 'styled-components';\n\nconst CoinInfo = ({ coin }) => {\n  const [historicData, setHistoricData] = useState();\n  const [days, setDays] = useState(1);\n  const { currency } = CryptoState();\n  const [flag, setFlag] = useState(false);\n\n  const Container = styled.div`\n    width: 75%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    margin-top: 25px;\n    padding: 40px;\n\n    @media (max-width: 768px) {\n      width: 100%;\n      margin-top: 0;\n      padding: 20px;\n      padding-top: 0;\n    }\n  `;\n\n  const fetchHistoricData = async () => {\n    try {\n      const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\n      setFlag(true);\n      setHistoricData(data.prices);\n    } catch (error) {\n      console.error('Error fetching historical data:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (coin) {\n      fetchHistoricData();\n    }\n  }, [days, currency, coin && coin.id]);\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: '#fff',\n      },\n      type: 'dark',\n    },\n  });\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Container>\n        {!historicData || !flag ? (\n          <CircularProgress style={{ color: 'gold' }} size={250} thickness={1} />\n        ) : (\n          <>\n<Line\n  data={{\n    labels: historicData.map((dataPoint) => {\n      const date = new Date(dataPoint[0]);\n      const time =\n        date.getHours() > 12\n          ? `${date.getHours() - 12}:${date.getMinutes()} PM`\n          : `${date.getHours()}:${date.getMinutes()} AM`;\n      return days === 1 ? time : date.toLocaleDateString();\n    }),\n\n    datasets: [\n      {\n        data: historicData.map((dataPoint) => dataPoint[1]),\n        label: `Price ( Past ${days} Days ) in ${currency}`,\n        borderColor: '#EEBC1D',\n      },\n    ],\n  }}\n  options={{\n    scales: {\n      x: {\n        type: 'linear', // Use 'linear' instead of 'category'\n      },\n    },\n    elements: {\n      point: {\n        radius: 1,\n      },\n    },\n  }}\n/>\n\n            <div\n              style={{\n                display: 'flex',\n                marginTop: 20,\n                justifyContent: 'space-around',\n                width: '100%',\n              }}\n            >\n              {chartDays.map((day) => (\n                <SelectButton\n                  key={day.value}\n                  onClick={() => {\n                    setDays(day.value);\n                    setFlag(false);\n                  }}\n                  selected={day.value === days}\n                >\n                  {day.label}\n                </SelectButton>\n              ))}\n            </div>\n          </>\n        )}\n      </Container>\n    </ThemeProvider>\n  );\n};\n\nexport default CoinInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}