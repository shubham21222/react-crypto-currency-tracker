{"ast":null,"code":"var _jsxFileName = \"/media/shubham/New Volume/cryptocurrency-project/src/components/CoinsTable.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport { Pagination } from '@mui/material';\nimport { Container, createTheme, TableCell, LinearProgress, ThemeProvider, Typography, TextField, TableBody, TableRow, TableHead, Table, Paper, TableContainer } from \"@mui/material\";\nimport axios from \"axios\";\nimport { CryptoState } from \"../CryptoContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { numberWithCommas } from \"./Banner/Carousal\";\nimport \"./CoinsTable.css\";\nimport { useRef } from \"react\";\n\n// Define your styled components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledContainer = styled(Container)({\n  textAlign: \"center\",\n  backgroundColor: \"fff\",\n  backgroundSize: \"cover\",\n  '@media (max-width: 600px)': {\n    padding: '10px' // Adjust the padding for smaller screens\n  },\n  '@media (min-width: 601px) and (max-width: 1200px)': {\n    padding: '20px' // Adjust the padding for screens between 601px and 1200px\n  }\n  // Add more breakpoints as needed\n});\n_c = StyledContainer;\nconst StyledTableContainer = styled(TableContainer)({\n  marginBottom: 20\n});\n_c2 = StyledTableContainer;\nconst StyledTextField = styled(TextField)({\n  marginBottom: 100,\n  width: \"100%\",\n  '& input': {\n    color: 'white' // Set the font color to white\n  },\n  '& label': {\n    color: 'white' // Set the label color to white if needed\n  }\n});\n_c3 = StyledTextField;\nconst StyledTableHead = styled(TableHead)({\n  backgroundColor: \"FFE382\"\n});\n_c4 = StyledTableHead;\nconst StyledTableRow = styled(TableRow)({\n  backgroundColor: \"#16171a\",\n  cursor: \"pointer\",\n  \"&:hover\": {\n    backgroundColor: \"#131111\"\n  },\n  fontFamily: \"Montserrat\"\n});\n_c5 = StyledTableRow;\nconst CoinsTable = () => {\n  _s();\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const {\n    currency,\n    symbol\n  } = CryptoState();\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"light\"\n    }\n  });\n  const mounted = useRef(true);\n  useEffect(() => {\n    return () => {\n      // Set the mounted ref to false when the component unmounts\n      mounted.current = false;\n    };\n  }, []);\n  const fetchCoins = async () => {\n    try {\n      setLoading(true);\n\n      // Introduce a delay of 3 seconds\n      await new Promise(resolve => setTimeout(resolve, 6000));\n      const response = await axios.get(`https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h`);\n\n      // Check if the response status is 429 (Too Many Requests)\n      if (response.status === 429) {\n        console.error(\"Rate-limiting error. Too many requests.\");\n        // Handle rate-limiting error (e.g., display a user-friendly message)\n        return;\n      }\n      const data = response.data; // Extract data from the response\n      console.log(data);\n\n      // Check if the component is still mounted before updating the state\n      if (!mounted.current) {\n        return;\n      }\n      setCoins(data);\n    } catch (error) {\n      console.error(\"Error fetching coins:\", error);\n    } finally {\n      // Check if the component is still mounted before updating the state\n      if (!mounted.current) {\n        return;\n      }\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n  const navigate = useNavigate(); // Use useNavigate directly\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search));\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(StyledContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          margin: 18,\n          fontFamily: \"Montserrat\",\n          textAlign: \"justify\",\n          alignItems: \"center\",\n          fontSize: \"2rem\",\n          // Set your desired base font size\n          '@media (max-width: 600px)': {\n            fontSize: '1.5rem' // Adjust the font size for smaller screens\n          }\n        },\n        children: \"Cryptocurrency Prices by Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextField, {\n        sx: {\n          color: \"white\"\n        },\n        label: \"Search For a Crypto Currency..\",\n        variant: \"outlined\",\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(StyledTableContainer, {\n        component: Paper,\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          sx: {\n            backgroundColor: \"#FFE382\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              className: \"table\",\n              children: [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                sx: {\n                  color: \"black\",\n                  fontWeight: \"700\",\n                  fontFamily: \"Montserrat\"\n                },\n                align: head === \"Coin\" ? \"\" : \"right\",\n                children: head\n              }, head, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handleSearch().slice((page - 1) * 10, (page - 1) * 10 + 10).map(row => {\n              const profit = row.price_change_percentage_24h > 0;\n              return /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                onClick: () => navigate(`/coins/${row.id}`),\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  style: {\n                    display: \"flex\",\n                    gap: 15\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row === null || row === void 0 ? void 0 : row.image,\n                    alt: row.name,\n                    height: \"50\",\n                    style: {\n                      marginBottom: 10\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 50\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      color: \"white\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        textTransform: \"uppercase\",\n                        fontSize: 22\n                      },\n                      children: row.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 231,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"darkgrey\"\n                      },\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    color: profit > 0 ? \"rgb(14,203,129\" : \"red\",\n                    fontWeight: 500\n                  },\n                  children: [symbol, \"\", numberWithCommas(row.current_price.toFixed(2))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    color: profit > 0 ? \"rgb(14,203,129\" : \"red\",\n                    fontWeight: 500\n                  },\n                  children: [profit && \"+\", row.price_change_percentage_24h.toFixed(2), \" %\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    color: \"white\"\n                  },\n                  children: [symbol, \" \", \"\", \" \", numberWithCommas(row.market_cap.toString().slice(0, 6)), \"M\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 49\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 45\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: Math.ceil(handleSearch().length / 10),\n        sx: {\n          padding: 20,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: \"20px\",\n          '& .MuiPaginationItem-root': {\n            color: 'white' // Set the color to white\n          }\n        },\n        onChange: (_, value) => {\n          setPage(value);\n          window.scroll(0, 450);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n_s(CoinsTable, \"fwml6jmZu6AeqapXoSJ9wJL9epw=\", false, function () {\n  return [useNavigate];\n});\n_c6 = CoinsTable;\nexport default CoinsTable;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"StyledContainer\");\n$RefreshReg$(_c2, \"StyledTableContainer\");\n$RefreshReg$(_c3, \"StyledTextField\");\n$RefreshReg$(_c4, \"StyledTableHead\");\n$RefreshReg$(_c5, \"StyledTableRow\");\n$RefreshReg$(_c6, \"CoinsTable\");","map":{"version":3,"names":["React","useEffect","useState","styled","Pagination","Container","createTheme","TableCell","LinearProgress","ThemeProvider","Typography","TextField","TableBody","TableRow","TableHead","Table","Paper","TableContainer","axios","CryptoState","useNavigate","numberWithCommas","useRef","jsxDEV","_jsxDEV","StyledContainer","textAlign","backgroundColor","backgroundSize","padding","_c","StyledTableContainer","marginBottom","_c2","StyledTextField","width","color","_c3","StyledTableHead","_c4","StyledTableRow","cursor","fontFamily","_c5","CoinsTable","_s","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","currency","symbol","darkTheme","palette","primary","main","type","mounted","current","fetchCoins","Promise","resolve","setTimeout","response","get","status","console","error","data","log","navigate","handleSearch","filter","coin","name","toLowerCase","includes","theme","children","variant","sx","margin","alignItems","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","e","target","value","component","className","map","head","fontWeight","align","slice","row","profit","price_change_percentage_24h","onClick","id","scope","style","display","gap","src","image","alt","height","flexDirection","textTransform","current_price","toFixed","market_cap","toString","count","Math","ceil","length","justifyContent","marginTop","_","window","scroll","_c6","$RefreshReg$"],"sources":["/media/shubham/New Volume/cryptocurrency-project/src/components/CoinsTable.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { styled } from \"@mui/system\";\nimport { Pagination } from '@mui/material';\nimport {\n    Container,\n    createTheme,\n    TableCell,\n    LinearProgress,\n    ThemeProvider,\n    Typography,\n    TextField,\n    TableBody,\n    TableRow,\n    TableHead,\n    Table,\n    Paper,\n    TableContainer,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport { CryptoState } from \"../CryptoContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { numberWithCommas } from \"./Banner/Carousal\";\nimport \"./CoinsTable.css\"\nimport { useRef } from \"react\";\n\n// Define your styled components\nconst StyledContainer = styled(Container)({\n    textAlign: \"center\",\n    backgroundColor: \"fff\",\n    backgroundSize: \"cover\",\n    '@media (max-width: 600px)': {\n        padding: '10px', // Adjust the padding for smaller screens\n    },\n    '@media (min-width: 601px) and (max-width: 1200px)': {\n        padding: '20px', // Adjust the padding for screens between 601px and 1200px\n    },\n    // Add more breakpoints as needed\n});\n\n\nconst StyledTableContainer = styled(TableContainer)({\n    marginBottom: 20,\n});\n\nconst StyledTextField = styled(TextField)({\n    marginBottom: 100,\n    width: \"100%\",\n    '& input': {\n        color: 'white',  // Set the font color to white\n    },\n    '& label': {\n        color: 'white',  // Set the label color to white if needed\n    },\n});\n\n\nconst StyledTableHead = styled(TableHead)({\n    backgroundColor: \"FFE382\",\n});\n\nconst StyledTableRow = styled(TableRow)({\n    backgroundColor: \"#16171a\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n        backgroundColor: \"#131111\",\n    },\n    fontFamily: \"Montserrat\",\n});\n\n\nconst CoinsTable = () => {\n    const [coins, setCoins] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState(\"\");\n    const [page, setPage] = useState(1);\n\n    const { currency, symbol } = CryptoState();\n\n    const darkTheme = createTheme({\n        palette: {\n            primary: {\n                main: \"#fff\",\n            },\n            type: \"light\",\n        },\n    });\n\n    const mounted = useRef(true);\n\n    useEffect(() => {\n        return () => {\n            // Set the mounted ref to false when the component unmounts\n            mounted.current = false;\n        };\n    }, []);\n\n\n\n    const fetchCoins = async () => {\n        try {\n            setLoading(true);\n\n            // Introduce a delay of 3 seconds\n            await new Promise(resolve => setTimeout(resolve, 6000));\n\n            const response = await axios.get(\n                `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=100&page=1&sparkline=false&price_change_percentage=24h`\n            );\n\n            // Check if the response status is 429 (Too Many Requests)\n            if (response.status === 429) {\n                console.error(\"Rate-limiting error. Too many requests.\");\n                // Handle rate-limiting error (e.g., display a user-friendly message)\n                return;\n            }\n\n            const data = response.data; // Extract data from the response\n            console.log(data);\n\n            // Check if the component is still mounted before updating the state\n            if (!mounted.current) {\n                return;\n            }\n\n            setCoins(data);\n        } catch (error) {\n            console.error(\"Error fetching coins:\", error);\n        } finally {\n            // Check if the component is still mounted before updating the state\n            if (!mounted.current) {\n                return;\n            }\n\n            setLoading(false);\n        }\n    };\n\n\n\n\n    useEffect(() => {\n        fetchCoins();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currency]);\n\n    const navigate = useNavigate(); // Use useNavigate directly\n\n    const handleSearch = () => {\n        return coins.filter(\n            (coin) =>\n                coin.name.toLowerCase().includes(search) ||\n                coin.symbol.toLowerCase().includes(search)\n        );\n    };\n\n\n    return (\n        <ThemeProvider theme={darkTheme} >\n            <StyledContainer>\n                <Typography\n                    variant=\"h4\"\n                    sx={{\n                        margin: 18,\n                        fontFamily: \"Montserrat\",\n                        textAlign: \"justify\",\n                        alignItems: \"center\",\n                        fontSize: \"2rem\", // Set your desired base font size\n                        '@media (max-width: 600px)': {\n                            fontSize: '1.5rem', // Adjust the font size for smaller screens\n                        },\n                    }}\n                >\n                    Cryptocurrency Prices by Market Cap\n                </Typography>\n\n\n\n                <StyledTextField sx={{ color: \"white\" }}\n                    label=\"Search For a Crypto Currency..\"\n                    variant=\"outlined\"\n                    onChange={(e) => setSearch(e.target.value)}\n                />\n                <StyledTableContainer component={Paper}>\n                    {loading ? (\n                        <LinearProgress sx={{ backgroundColor: \"#FFE382\" }} />\n                    ) : (\n                        <Table aria-label=\"simple table\">\n                            <StyledTableHead>\n                                <TableRow className=\"table\">\n                                    {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n                                        <TableCell\n                                            sx={{\n                                                color: \"black\",\n                                                fontWeight: \"700\",\n                                                fontFamily: \"Montserrat\",\n                                            }}\n                                            key={head}\n                                            align={head === \"Coin\" ? \"\" : \"right\"}\n                                        >\n                                            {head}\n                                        </TableCell>\n                                    ))}\n                                </TableRow>\n                            </StyledTableHead>\n\n                            <TableBody>\n                                {handleSearch()\n                                    .slice((page - 1) * 10, (page - 1) * 10 + 10)\n                                    .map((row) => {\n                                        const profit = row.price_change_percentage_24h > 0;\n                                        return (\n                                            <StyledTableRow\n                                                onClick={() => navigate(`/coins/${row.id}`)}\n                                                key={row.name}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                    style={{\n                                                        display: \"flex\",\n                                                        gap: 15,\n                                                    }}\n                                                ><img\n                                                    src={row?.image}\n                                                    alt={row.name}\n                                                    height=\"50\"\n                                                    style={{ marginBottom: 10 }}\n                                                >\n                                                    </img>\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\", color: \"white\" }}>\n                                                        <span style={{ textTransform: \"uppercase\", fontSize: 22 }}>\n                                                            {row.symbol}\n                                                        </span>\n                                                        <span style={{ color: \"darkgrey\" }}>{row.name}</span>\n                                                    </div>\n\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    style={{\n                                                        color: profit > 0 ? \"rgb(14,203,129\" : \"red\",\n                                                        fontWeight: 500,\n                                                    }}\n                                                >\n                                                    {symbol}{\"\"}\n                                                    {numberWithCommas(row.current_price.toFixed(2))}\n                                                </TableCell>\n                                                <TableCell\n                                                    align=\"right\"\n                                                    style={{\n                                                        color: profit > 0 ? \"rgb(14,203,129\" : \"red\",\n                                                        fontWeight: 500,\n                                                    }}\n                                                >\n                                                    {profit && \"+\"}\n                                                    {row.price_change_percentage_24h.toFixed(2)} %\n\n                                                </TableCell>\n                                                <TableCell align=\"right\" style={{ color: \"white\" }}>\n                                                    {symbol} {\"\"} {numberWithCommas(row.market_cap.toString().slice(0, 6))}\n                                                    M\n                                                </TableCell>\n                                            </StyledTableRow>\n                                        );\n                                    })}\n                            </TableBody>\n                        </Table>\n                    )}\n                </StyledTableContainer>\n\n                <Pagination\n                    count={Math.ceil(handleSearch().length / 10)}\n                    sx={{\n                        padding: 20,\n                        width: \"100%\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        marginTop: \"20px\",\n                        '& .MuiPaginationItem-root': {\n                            color: 'white',  // Set the color to white\n                        },\n                    }}\n                    onChange={(_, value) => {\n                        setPage(value);\n                        window.scroll(0, 450);\n                    }}\n                />\n\n\n\n\n            </StyledContainer>\n        </ThemeProvider>\n    );\n};\n\nexport default CoinsTable;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}