{"ast":null,"code":"var _jsxFileName = \"/media/shubham/New Volume/cryptocurrency-project/src/CryptoContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Crypto = /*#__PURE__*/createContext();\nconst CryptoContext = ({\n  children\n}) => {\n  _s();\n  const [currency, setCurrency] = useState('INR');\n  const [symbol, setSymbol] = useState('₹');\n  useEffect(() => {\n    if (currency === 'INR') setSymbol('₹');else if (currency === 'USD') setSymbol('$');\n  }, [currency]);\n  return /*#__PURE__*/_jsxDEV(Crypto.Provider, {\n    value: {\n      currency,\n      symbol,\n      setCurrency\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(CryptoContext, \"xzqtfffAZM4pDNUBrRMWYw9umhw=\");\n_c = CryptoContext;\nexport default CryptoContext;\nexport const CryptoState = () => {\n  _s2();\n  return useContext(Crypto);\n};\n_s2(CryptoState, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n_c2 = CryptoState;\nvar _c, _c2;\n$RefreshReg$(_c, \"CryptoContext\");\n$RefreshReg$(_c2, \"CryptoState\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","Crypto","CryptoContext","children","_s","currency","setCurrency","symbol","setSymbol","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","CryptoState","_s2","_c2","$RefreshReg$"],"sources":["/media/shubham/New Volume/cryptocurrency-project/src/CryptoContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst Crypto = createContext();\n\nconst CryptoContext = ({ children }) => {\n  const [currency, setCurrency] = useState('INR');\n  const [symbol, setSymbol] = useState('₹');\n\n  useEffect(() => {\n    if (currency === 'INR') setSymbol('₹');\n    else if (currency === 'USD') setSymbol('$');\n  }, [currency]);\n\n  return (\n    <Crypto.Provider value={{ currency, symbol, setCurrency }}>\n      {children}\n    </Crypto.Provider>\n  );\n};\n\nexport default CryptoContext;\n\nexport const CryptoState = () => {\n  return useContext(Crypto);\n};\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,MAAM,gBAAGN,aAAa,CAAC,CAAC;AAE9B,MAAMO,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,GAAG,CAAC;EAEzCC,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,KAAK,KAAK,EAAEG,SAAS,CAAC,GAAG,CAAC,CAAC,KAClC,IAAIH,QAAQ,KAAK,KAAK,EAAEG,SAAS,CAAC,GAAG,CAAC;EAC7C,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACC,MAAM,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL,QAAQ;MAAEE,MAAM;MAAED;IAAY,CAAE;IAAAH,QAAA,EACvDA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEtB,CAAC;AAACV,EAAA,CAdIF,aAAa;AAAAa,EAAA,GAAbb,aAAa;AAgBnB,eAAeA,aAAa;AAE5B,OAAO,MAAMc,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,OAAOrB,UAAU,CAACK,MAAM,CAAC;AAC3B,CAAC;AAACgB,GAAA,CAFWD,WAAW;AAAAE,GAAA,GAAXF,WAAW;AAAA,IAAAD,EAAA,EAAAG,GAAA;AAAAC,YAAA,CAAAJ,EAAA;AAAAI,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}